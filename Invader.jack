/** Implements an invader */
class Invader {
    
    field int x, y; // screen location of the invader
    field int location; // memory location of the invader
    field int width; // width and heigh, maybe necessary for collisions
    field int height;

    /** Constructs a new invader with the given location */
    constructor Invader new(int Ax, int Ay) {
        let x = Ax;
        let y = Ay;
        let width = 0;
        let height = 0;
        let location = (32 * y) + (x / 16);
        do draw(location);
        return this;
    }

    /** Disposes the Invader */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /** Draws this invader on the screen */
    method void draw(int location) {
        var int memAddress;
        let memAddress = 16384+location;
        do Memory.poke(memAddress+0, 0);
        do Memory.poke(memAddress+32, 2016);
        do Memory.poke(memAddress+64, 2064);
        do Memory.poke(memAddress+96, 4104);
        do Memory.poke(memAddress+128, 4104);
        do Memory.poke(memAddress+160, 32766);
        do Memory.poke(memAddress+192, -32767);
        do Memory.poke(memAddress+224, -32767);
        do Memory.poke(memAddress+256, -32767);
        do Memory.poke(memAddress+288, 32766);
        do Memory.poke(memAddress+320, 0);
        do Memory.poke(memAddress+352, 0);
        do Memory.poke(memAddress+384, 0);
        do Memory.poke(memAddress+416, 0);
        do Memory.poke(memAddress+448, 0);
        do Memory.poke(memAddress+480, 0);
        return;
    }
}