/** Implements the Game logic */
class SpaceInvaderGame
{
    field Tank tank; // Player
    field InvaderList invaders; // All invaders
    field BulletList bullets; // All bullets

    constructor SpaceInvaderGame new()
    {
        let tank = Tank.new();
        do Invader.init();
        do Bullet.init();
        let invaders = InvaderList.new(Invader.new(1,1), null);
        return this;
    }

    /** Dispose of game and all it's component parts */
    method void dispose()
    {
        do tank.dispose();
        do invaders.dispose();
        do bullets.dispose();
        do Memory.deAlloc(this);
        return;
    }

    /** Accessors for testing */
    method Tank getTank() { return tank; }
    method InvaderList getInvaders() { return invaders; }
    method BulletList getBullets() { return bullets; }
    method void setBullets(BulletList newBullets) { let bullets = newBullets; return; }

    /** Update position of all sprites */
    method void updatePositions()
    {
        do tank.move();
        do invaders.move();
        do bullets.move();
        return;
    }

    /** Check collision between all bullets and all invaders
      * To find hits */
    method void checkCollisions()
    {
        // TODO: Check collision between all bullets and all Invaders
        return;
    }

    /** Check a collision between 1 bullet and 1 invader */
    function boolean checkCollision(Bullet bullet, Invader invader)
    {
        // TODO: check collisoin between one bullet and invader
        return false;
    }

    // TODO: Run game infinitely until a spaceship lands signifiying a loss

    // TODO: Display a loss message
}