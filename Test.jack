/** Test Methods */
class Test
{
    function void doStuff(SpaceInvaderGame game)
    {
        var int i;
        var int bulletCount;
        var Tank tank;
        var BulletList gameBullets;
        var Bullet currentBullet;
        
        let tank = game.getTank();
        
        do game.setBullets(BulletList.new(tank.fire(), null));

        let i = 0;
        while (true)
        {
            if (bulletCount = 20)
            {
                let i = 3;
            }
            let bulletCount = 0;
            do game.updateState();
            let gameBullets = game.getBullets();
            while (~(gameBullets = null))
            {
                let bulletCount = bulletCount + 1;
                let currentBullet = gameBullets.getData();
                let gameBullets = gameBullets.getNext();
            }
            do Output.printInt(bulletCount);
            do Sys.wait(100);
            do Output.backSpace();
            do Renderer.renderState(tank, game.getBullets(), game.getInvaders());
            do Sys.wait(100);
            let i = i + 1;
            if (i = 2)
            {
                let i = 0;
                // let invaders = InvaderList.new(Invader.new(10,10), invaders);
                if (bulletCount < 20)
                {
                    do game.setBullets(BulletList.new(tank.fire(), game.getBullets()));
                }
            }
            // do Output.printString("EOF");
            // do Sys.wait(100);
            // do Output.backSpace();
            // do Output.backSpace();
            // do Output.backSpace();
        }
        return;
    }

    function void testCollisions()
    {
        var Bullet testBullet;
        var Invader testInvader;
        var InvaderList testInvaders;

        let testBullet = Bullet.new(200, 200);
        let testInvader = Invader.new(200, 200);
        let testInvaders = InvaderList.new(testInvader, null);

        do Renderer.renderState(null, BulletList.new(testBullet, null), testInvaders);
        do Sys.wait(100);

        do CollisionChecker.checkBulletCollisions(testBullet, testInvaders);
        return;
    }
}